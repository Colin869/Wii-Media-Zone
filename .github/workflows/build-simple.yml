name: Build Wii Homebrew Applications (Simple)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gcc g++ make cmake wget unzip
        
    - name: Download devkitPPC
      run: |
        # Download a pre-built devkitPPC (if available)
        mkdir -p /opt/devkitpro
        cd /opt/devkitpro
        
        # For now, we'll just create the directory structure
        # In a real scenario, you'd download the actual devkitPPC
        mkdir -p devkitPPC/bin
        mkdir -p libogc/include
        mkdir -p libogc/lib/wii
        
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITPPC=/opt/devkitpro/devkitPPC" >> $GITHUB_ENV
        
    - name: Create dummy build files
      run: |
        # Create dummy .dol files for testing the workflow
        mkdir -p apps/HelloWii
        mkdir -p apps/WiiMediaPlayer
        mkdir -p apps/WiiMediaPlayerChannel/build
        
        # Create dummy files
        echo "Dummy HelloWii.dol" > apps/HelloWii/HelloWii.dol
        echo "Dummy WiiMediaPlayer.dol" > apps/WiiMediaPlayer/WiiMediaPlayer.dol
        echo "Dummy WiiMediaPlayerChannel.dol" > apps/WiiMediaPlayerChannel/build/WiiMediaPlayerChannel.dol
        
        echo "Created dummy build files for testing"
        
    - name: List files
      run: |
        echo "=== Project Structure ==="
        find . -type f -name "*.c" -o -name "*.h" -o -name "*.dol" | head -20
        echo "========================"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wii-homebrew-builds
        path: |
          apps/HelloWii/*.dol
          apps/WiiMediaPlayer/*.dol
          apps/WiiMediaPlayerChannel/build/*.dol
        retention-days: 30
        if-no-files-found: warn
        
    - name: Create release assets
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        mkdir -p release-assets
        
        # Copy built applications
        cp apps/HelloWii/*.dol release-assets/HelloWii.dol || echo "HelloWii.dol not found"
        cp apps/WiiMediaPlayer/*.dol release-assets/WiiMediaPlayer.dol || echo "WiiMediaPlayer.dol not found"
        cp apps/WiiMediaPlayerChannel/build/*.dol release-assets/WiiMediaPlayerChannel.dol || echo "WiiMediaPlayerChannel.dol not found"
        
        # Create zip files
        cd release-assets
        for dol in *.dol; do
          if [ -f "$dol" ]; then
            zip -r "${dol%.dol}.zip" "$dol"
          fi
        done
        
    - name: Upload release assets
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3
      with:
        name: release-assets
        path: release-assets/
        retention-days: 30
        if-no-files-found: warn
